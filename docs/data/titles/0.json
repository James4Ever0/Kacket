{
    "/README.md": "Kacket: Kotlin Racket Analyzer",
    "/TODO.md": "Lambda Function Case and Procedure",
    "/src/main/kotlin/CMD.kt": "CMD Class Parser and Options",
    "/src/main/kotlin/Main.kt": "Command-Line Analyzer Initialization",
    "/src/main/kotlin/Main.kt:1-30": "Code Loads Necessary Classes and Defines Helper Functions",
    "/src/main/kotlin/Main.kt:31-61": "Configure Analyzer for Program",
    "/src/main/kotlin/Main.kt:62-78": "Command Handling with Error Handling",
    "/src/main/kotlin/com/github/std/kacket/analysis/AnalysisError.kt": "Custom Exception for Kacket Analysis",
    "/src/main/kotlin/com/github/std/kacket/analysis/InitProcEnv.kt": "Initializing Kacket Analysis Class",
    "/src/main/kotlin/com/github/std/kacket/analysis/InitProcEnv.kt:1-35": "Initializing Procedural Functions in InitProcEnv",
    "/src/main/kotlin/com/github/std/kacket/analysis/InitProcEnv.kt:36-67": "Arity Map Initialization",
    "/src/main/kotlin/com/github/std/kacket/analysis/InitProcEnv.kt:68-75": "Class Implements RuleApplier Interface for Kacket Analysis",
    "/src/main/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzer.kt": "Kacket Language ProcCallAnalyzer",
    "/src/main/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzer.kt:1-30": "Kacket ProcCallAnalyzer Initialization",
    "/src/main/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzer.kt:106-140": "Let Expression Analysis",
    "/src/main/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzer.kt:141-175": "ProcCallAnalyzer: Expression Parsing & Handling",
    "/src/main/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzer.kt:176-204": "Procedure Call Analyzer",
    "/src/main/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzer.kt:206-221": "ProcCallAnalyzer Code Snippet",
    "/src/main/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzer.kt:32-70": "Analyzing Procedure Calls in Kacket",
    "/src/main/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzer.kt:71-105": "Expression Analyzer Implementation",
    "/src/main/kotlin/com/github/std/kacket/analysis/ProcCallRule.kt": "Proc Call Analysis Functions",
    "/src/main/kotlin/com/github/std/kacket/analysis/ProcEnv.kt": "Rules for Process Environments",
    "/src/main/kotlin/com/github/std/kacket/analysis/RestProcEnv.kt": "Restful Processing Environment",
    "/src/main/kotlin/com/github/std/kacket/analysis/exten/CasesAnalyzer.kt": "Cases Analyzer in Kacket Programming",
    "/src/main/kotlin/com/github/std/kacket/analysis/exten/CasesAnalyzer.kt:1-28": "Cases Analyzer for Kacket",
    "/src/main/kotlin/com/github/std/kacket/analysis/exten/CasesAnalyzer.kt:29-33": "Default Expression Generation",
    "/src/main/kotlin/com/github/std/kacket/analysis/exten/DefineDatatypeAnalyzer.kt": "DefineDatatype Analyzer",
    "/src/main/kotlin/com/github/std/kacket/analysis/exten/DefineDatatypeAnalyzer.kt:1-27": "DefineDatatypeAnalyzer Class",
    "/src/main/kotlin/com/github/std/kacket/analysis/exten/DefineDatatypeAnalyzer.kt:28-48": "Checking Procedure Arity of Predicate",
    "/src/main/kotlin/com/github/std/kacket/analysis/exten/DefineDatatypeAnalyzer.kt:49-58": "DefineDatatypeConditional",
    "/src/main/kotlin/com/github/std/kacket/analysis/exten/ExtAnalyzer.kt": "ExtAnalyzer: Interface for ExtExpr Analysis",
    "/src/main/kotlin/com/github/std/kacket/expr/Begin.kt": "Begin Expression Class",
    "/src/main/kotlin/com/github/std/kacket/expr/Call.kt": "Call Expression Parser",
    "/src/main/kotlin/com/github/std/kacket/expr/Const.kt": "Const Class Represents Constant Expression in Kacket Language",
    "/src/main/kotlin/com/github/std/kacket/expr/Define.kt": "Define Expression Representation",
    "/src/main/kotlin/com/github/std/kacket/expr/ExprError.kt": "Custom ExprError Exception in Kacket Library",
    "/src/main/kotlin/com/github/std/kacket/expr/Expression.kt": "Expression Interface for Context Line and Column Numbers",
    "/src/main/kotlin/com/github/std/kacket/expr/If.kt": "Kacket If Expression Class",
    "/src/main/kotlin/com/github/std/kacket/expr/Let.kt": "Let Expression Representation in Kotlin",
    "/src/main/kotlin/com/github/std/kacket/expr/Letrec.kt": "Letrec Expression Representation",
    "/src/main/kotlin/com/github/std/kacket/expr/Procedure.kt": "Procedure: Lambda Expression Representation",
    "/src/main/kotlin/com/github/std/kacket/expr/Quote.kt": "Quote Class: Converting Tokens to Strings",
    "/src/main/kotlin/com/github/std/kacket/expr/Quote.kt:1-51": "Quote Class Implementation",
    "/src/main/kotlin/com/github/std/kacket/expr/Quote.kt:52-86": "Quote and ElementQuotes Classes",
    "/src/main/kotlin/com/github/std/kacket/expr/Quote.kt:87-88": "Closing Block",
    "/src/main/kotlin/com/github/std/kacket/expr/Var.kt": "Variable Expression in Kacket Language",
    "/src/main/kotlin/com/github/std/kacket/expr/exten/Cases.kt": "Kacket's Cases Expressions",
    "/src/main/kotlin/com/github/std/kacket/expr/exten/Cases.kt:1-39": "Cases Expression in Kacket",
    "/src/main/kotlin/com/github/std/kacket/expr/exten/Cases.kt:40-46": "Generate Extension Method for Class or Interface",
    "/src/main/kotlin/com/github/std/kacket/expr/exten/DefineDatatype.kt": "DefineDatatype in Kacket Language",
    "/src/main/kotlin/com/github/std/kacket/expr/exten/DefineDatatype.kt:1-35": "DefineDatatype: Kacket Language Define-Datatype Expression",
    "/src/main/kotlin/com/github/std/kacket/expr/exten/DefineDatatype.kt:36-40": "Parenthesized String Representation",
    "/src/main/kotlin/com/github/std/kacket/expr/exten/ExtExpr.kt": "ExtExpr: Extended Expression Interface",
    "/src/main/kotlin/com/github/std/kacket/parse/Bool.kt": "Kacket Bool Token Representation",
    "/src/main/kotlin/com/github/std/kacket/parse/Character.kt": "Character Tokenizer",
    "/src/main/kotlin/com/github/std/kacket/parse/EOF.kt": "EOF Token Class",
    "/src/main/kotlin/com/github/std/kacket/parse/Identifier.kt": "Identifier Class Definition",
    "/src/main/kotlin/com/github/std/kacket/parse/LexError.kt": "Customizable Lexical Errors in Kacket Parsing",
    "/src/main/kotlin/com/github/std/kacket/parse/Lexer.kt": "Kacket Lexer Class",
    "/src/main/kotlin/com/github/std/kacket/parse/Lexer.kt:1-42": "Lexer Class for Parsing Text",
    "/src/main/kotlin/com/github/std/kacket/parse/Lexer.kt:125-159": "Lexer for Symbols and Numbers Parsing",
    "/src/main/kotlin/com/github/std/kacket/parse/Lexer.kt:160-190": "Token Lexer Implementation",
    "/src/main/kotlin/com/github/std/kacket/parse/Lexer.kt:191-229": "Lexer Functions for Parsing Tokens",
    "/src/main/kotlin/com/github/std/kacket/parse/Lexer.kt:230-266": "Lexer for Identifier Parsing",
    "/src/main/kotlin/com/github/std/kacket/parse/Lexer.kt:43-83": "Token Identifier Lexer",
    "/src/main/kotlin/com/github/std/kacket/parse/Lexer.kt:84-124": "Kacket Lexer Parsing and Tokenization",
    "/src/main/kotlin/com/github/std/kacket/parse/Num.kt": "Num Token Representation",
    "/src/main/kotlin/com/github/std/kacket/parse/ParseError.kt": "Custom Parse Error Exception Class",
    "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt": "Kacket Parser Syntax & Functions",
    "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:1-32": "Parser Class Definition",
    "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:117-147": "Kacket Parser Implementation",
    "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:148-178": "Letrec Parser in Kotlin",
    "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:179-213": "Parsing Recursive Let Bindings in Kacket",
    "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:214-248": "Kacket Parser: Let Statement Functions",
    "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:249-279": "Parsing Let and Letrec Expressions",
    "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:280-317": "Parsing Let and Proc Statements",
    "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:319-344": "Conditional Expression Parser",
    "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:33-68": "Kacket Parser Function",
    "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:345-374": "Parse If Expressions",
    "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:375-404": "Define Parser Function Implementation",
    "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:405-428": "Parser Handles Define Statement",
    "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:70-95": "Nested Quote Parsing in Kacket",
    "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:96-116": "Kacket Parser: Identifying Syntax Elements",
    "/src/main/kotlin/com/github/std/kacket/parse/Punctuation.kt": "Punctuation Token Class",
    "/src/main/kotlin/com/github/std/kacket/parse/Symbol.kt": "Symbol Class in Kacket Parser",
    "/src/main/kotlin/com/github/std/kacket/parse/Text.kt": "Text Token Class: Kotlin Parse Implementation",
    "/src/main/kotlin/com/github/std/kacket/parse/Token.kt": "Token Interface: Line & Column Numbering",
    "/src/main/kotlin/com/github/std/kacket/parse/exten/CasesParser.kt": "CasesParser: Parsing Cases Expressions",
    "/src/main/kotlin/com/github/std/kacket/parse/exten/CasesParser.kt:1-27": "CasesParser Extends SExprExtParser",
    "/src/main/kotlin/com/github/std/kacket/parse/exten/CasesParser.kt:28-52": "CasesParser: Parsing Cases Statements in Kotlin",
    "/src/main/kotlin/com/github/std/kacket/parse/exten/CasesParser.kt:53-54": "Switch Case Parsing",
    "/src/main/kotlin/com/github/std/kacket/parse/exten/DefineDatatypeParser.kt": "Kacket DefineDatatypeParser Explained",
    "/src/main/kotlin/com/github/std/kacket/parse/exten/DefineDatatypeParser.kt:1-26": "Kacket's DefineDatatypeParser Functionality",
    "/src/main/kotlin/com/github/std/kacket/parse/exten/DefineDatatypeParser.kt:27-55": "Parse Define Datatype Block",
    "/src/main/kotlin/com/github/std/kacket/parse/exten/DefineDatatypeParser.kt:56-59": "Define Datatype Parser",
    "/src/main/kotlin/com/github/std/kacket/parse/exten/SExprExtParser.kt": "Extended Regular Expression Parser Interface",
    "/src/main/kotlin/com/github/std/kacket/transpiler/scheme-js.js": "Scheme to JavaScript Transpiler",
    "/src/main/resources/grammar.txt": "Programming Language Grammar EBNF Definition",
    "/src/main/resources/test.rkt": "Racket Code Snippet: Functions, Trees, Sums",
    "/src/test/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzerTest.kt": "Testing Kacket ProcCallAnalyzer",
    "/src/test/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzerTest.kt:1-31": "Kacket ProcCallAnalyzer Test",
    "/src/test/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzerTest.kt:106-139": "ProcCallAnalyzer Test: Scheme Program Analysis with Kotlin",
    "/src/test/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzerTest.kt:140-176": "Analyzing ProcCallAnalyzer with Test Functions",
    "/src/test/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzerTest.kt:177-208": "Parser for Expression Language",
    "/src/test/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzerTest.kt:209-242": "Lisp-like Program Analyzer Extension",
    "/src/test/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzerTest.kt:243-248": "External Analyzers Addition in ProcCallAnalyzer",
    "/src/test/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzerTest.kt:33-66": "Recursive Fibonacci and Sequence Length Analysis",
    "/src/test/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzerTest.kt:67-105": "Lisp Code Test Suite with ProcCallAnalyzer",
    "/src/test/kotlin/com/github/std/kacket/parse/LexerTest.kt": "Lexer Test: Fibonacci Parsing",
    "/src/test/kotlin/com/github/std/kacket/parse/LexerTest.kt:1-41": "Testing Lexer with JUnit and ByteArrayInputStream",
    "/src/test/kotlin/com/github/std/kacket/parse/LexerTest.kt:42-60": "Fibonacci Lexer for Scheme Code",
    "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt": "Kacket Parser Unit Test",
    "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:1-28": "Parser Test: Kotlin Expression Parsing",
    "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:116-152": "Parser Testing with Complex Expressions",
    "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:153-184": "Kacket Parser Test Functions",
    "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:185-220": "Lisp-like Expression Parser Test Cases",
    "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:221-254": "Parser Test: Expression Parsing and Comparison",
    "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:255-288": "Unit Test for Expression Parser",
    "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:289-308": "Expression Parser Test Case",
    "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:29-51": "Kacket Parser Testing: Code Block Comparison",
    "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:309-328": "Parser for Simple Programming Language",
    "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:329-348": "Custom Cases Parser for Expression Parsing",
    "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:349-350": "Closing Brace for Function",
    "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:52-80": "Parser Scenarios Testing",
    "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:81-115": "Parser Test Suite"
}
{"_default": {"1": {"path": "/README.md", "hash": "47a1bf66248780c860ba76ad4af3226e", "title": "Kacket: Kotlin Racket Analyzer"}, "2": {"path": "/TODO.md", "hash": "cbabd8b5ca9f330fdcef3c4cf2395562", "title": "Lambda Function Case and Procedure"}, "3": {"path": "/src/main/kotlin/CMD.kt", "hash": "59dabf79398611a8497ff346d053904b", "title": "CMD Class Parser and Options"}, "4": {"path": "/src/main/kotlin/Main.kt", "hash": "54d002bac58a54dc1528e025b5e88998", "title": "Command-Line Analyzer Initialization"}, "5": {"path": "/src/main/kotlin/Main.kt:1-30", "hash": "999f1e4b8670d334f18e50ad4a99f671", "title": "Code Loads Necessary Classes and Defines Helper Functions"}, "6": {"path": "/src/main/kotlin/Main.kt:31-61", "hash": "a52bee44647678cd993060ab8fa9cbed", "title": "Configure Analyzer for Program"}, "7": {"path": "/src/main/kotlin/Main.kt:62-78", "hash": "4aa975b5d9e05839a4e1c2beeab146a2", "title": "Command Handling with Error Handling"}, "8": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/AnalysisError.kt", "hash": "6d65a2345755bc2c38c51956d1ca6886", "title": "Custom Exception for Kacket Analysis"}, "9": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/InitProcEnv.kt", "hash": "23fa55679292150bfcbc9da1ca22bf99", "title": "Initializing Kacket Analysis Class"}, "10": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/InitProcEnv.kt:1-35", "hash": "a54de78af5c8ceb534ff749a0e03c489", "title": "Initializing Procedural Functions in InitProcEnv"}, "11": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/InitProcEnv.kt:36-67", "hash": "998e92756c87b1e9ceac99c517faa580", "title": "Arity Map Initialization"}, "12": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/InitProcEnv.kt:68-75", "hash": "4a5c9170c9fd902c809ddc25e5f6f5ed", "title": "Class Implements RuleApplier Interface for Kacket Analysis"}, "13": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzer.kt", "hash": "435c8599e6cfbc8b8d761cd3508ebb9e", "title": "Kacket Language ProcCallAnalyzer"}, "14": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzer.kt:1-30", "hash": "172560e425c5314ffb1fee311852c24f", "title": "Kacket ProcCallAnalyzer Initialization"}, "15": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzer.kt:32-70", "hash": "2ffb29f464f3fbb0f5e164269c0370d2", "title": "Analyzing Procedure Calls in Kacket"}, "16": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzer.kt:71-105", "hash": "b4d15c09ac6630b0fb9f4cd5332918dc", "title": "Expression Analyzer Implementation"}, "17": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzer.kt:106-140", "hash": "b836241256f3f9e703c11ae567c19388", "title": "Let Expression Analysis"}, "18": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzer.kt:141-175", "hash": "f1f9cbfa2dad2fc0c9313bdcda7e359f", "title": "ProcCallAnalyzer: Expression Parsing & Handling"}, "19": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzer.kt:176-204", "hash": "ec5b800d6a955b4e5877123f1c9ede0b", "title": "Procedure Call Analyzer"}, "20": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzer.kt:206-221", "hash": "d20abdf05309428c357cdd3dc1d8bd9f", "title": "ProcCallAnalyzer Code Snippet"}, "21": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/ProcCallRule.kt", "hash": "30209994c2e4b026856f0b852acfbf1f", "title": "Proc Call Analysis Functions"}, "22": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/ProcEnv.kt", "hash": "f9c15bb729eb374296b78eaae905669e", "title": "Rules for Process Environments"}, "23": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/RestProcEnv.kt", "hash": "25e3c5ffbcd21b8ec3cdb35f711f7c8a", "title": "Restful Processing Environment"}, "24": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/exten/CasesAnalyzer.kt", "hash": "668dcb8e15e94814bc0630103273542d", "title": "Cases Analyzer in Kacket Programming"}, "25": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/exten/CasesAnalyzer.kt:1-28", "hash": "4babac230f34dc6d128581b274dbceb3", "title": "Cases Analyzer for Kacket"}, "26": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/exten/CasesAnalyzer.kt:29-33", "hash": "ead58d2f3cd117944f00b2366bb17b4c", "title": "Default Expression Generation"}, "27": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/exten/DefineDatatypeAnalyzer.kt", "hash": "f5f3a1be3386bdefc6a3c5d8a2c8322a", "title": "DefineDatatype Analyzer"}, "28": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/exten/DefineDatatypeAnalyzer.kt:1-27", "hash": "25970507de2cd209e2b1081bfb636543", "title": "DefineDatatypeAnalyzer Class"}, "29": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/exten/DefineDatatypeAnalyzer.kt:28-48", "hash": "659704782f3f02881750ae260375f6f2", "title": "Checking Procedure Arity of Predicate"}, "30": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/exten/DefineDatatypeAnalyzer.kt:49-58", "hash": "b9e4a67696df62e9f40fa0508daebaa3", "title": "DefineDatatypeConditional"}, "31": {"path": "/src/main/kotlin/com/github/std/kacket/analysis/exten/ExtAnalyzer.kt", "hash": "2083335bd854eaaf5a867c296268f451", "title": "ExtAnalyzer: Interface for ExtExpr Analysis"}, "32": {"path": "/src/main/kotlin/com/github/std/kacket/expr/Begin.kt", "hash": "0e8c76e90299734c8833f04e40a0c716", "title": "Begin Expression Class"}, "33": {"path": "/src/main/kotlin/com/github/std/kacket/expr/Call.kt", "hash": "18351cc45d51ab25b8899e3cec682dee", "title": "Call Expression Parser"}, "34": {"path": "/src/main/kotlin/com/github/std/kacket/expr/Const.kt", "hash": "a21678e24746521a47773ff5896e865f", "title": "Const Class Represents Constant Expression in Kacket Language"}, "35": {"path": "/src/main/kotlin/com/github/std/kacket/expr/Define.kt", "hash": "3c03a74064b66613c9d4a8229ef9af5c", "title": "Define Expression Representation"}, "36": {"path": "/src/main/kotlin/com/github/std/kacket/expr/ExprError.kt", "hash": "77c90dbac2cdcd418a10a6a7dc7906cd", "title": "Custom ExprError Exception in Kacket Library"}, "37": {"path": "/src/main/kotlin/com/github/std/kacket/expr/Expression.kt", "hash": "956ad9460d663ea61aac8dee13f96534", "title": "Expression Interface for Context Line and Column Numbers"}, "38": {"path": "/src/main/kotlin/com/github/std/kacket/expr/If.kt", "hash": "afa9630a4d5aae4c7196d3a850516935", "title": "Kacket If Expression Class"}, "39": {"path": "/src/main/kotlin/com/github/std/kacket/expr/Let.kt", "hash": "9e6aa53fc33533fbf4483980362f0b4b", "title": "Let Expression Representation in Kotlin"}, "40": {"path": "/src/main/kotlin/com/github/std/kacket/expr/Letrec.kt", "hash": "be25add5f28e9b8186e0773db7a0268d", "title": "Letrec Expression Representation"}, "41": {"path": "/src/main/kotlin/com/github/std/kacket/expr/Procedure.kt", "hash": "55cc720a4ae23e7f4f0b22e69b7705d6", "title": "Procedure: Lambda Expression Representation"}, "42": {"path": "/src/main/kotlin/com/github/std/kacket/expr/Quote.kt", "hash": "87080dc388ba32c371fa1ce920010db0", "title": "Quote Class: Converting Tokens to Strings"}, "43": {"path": "/src/main/kotlin/com/github/std/kacket/expr/Quote.kt:1-51", "hash": "924102c6566336377ea9ee1d505a2dd6", "title": "Quote Class Implementation"}, "44": {"path": "/src/main/kotlin/com/github/std/kacket/expr/Quote.kt:52-86", "hash": "8fbb692a544e0e51c553d7e62735f374", "title": "Quote and ElementQuotes Classes"}, "45": {"path": "/src/main/kotlin/com/github/std/kacket/expr/Quote.kt:87-88", "hash": "dc96438cd5660953f8d74baae924f65c", "title": "Closing Block"}, "46": {"path": "/src/main/kotlin/com/github/std/kacket/expr/Var.kt", "hash": "bfde77546dd6a1516e3c669a3ced53fe", "title": "Variable Expression in Kacket Language"}, "47": {"path": "/src/main/kotlin/com/github/std/kacket/expr/exten/Cases.kt", "hash": "3e427c376dec6d73ee71fd88317aa0f8", "title": "Kacket's Cases Expressions"}, "48": {"path": "/src/main/kotlin/com/github/std/kacket/expr/exten/Cases.kt:1-39", "hash": "bda4820317d3a936b2789b282497aa7a", "title": "Cases Expression in Kacket"}, "49": {"path": "/src/main/kotlin/com/github/std/kacket/expr/exten/Cases.kt:40-46", "hash": "7760e7274a9af5fc9d11f16993791aad", "title": "Generate Extension Method for Class or Interface"}, "50": {"path": "/src/main/kotlin/com/github/std/kacket/expr/exten/DefineDatatype.kt", "hash": "1907ea7546a8d7e6b113cc71fc870d80", "title": "DefineDatatype in Kacket Language"}, "51": {"path": "/src/main/kotlin/com/github/std/kacket/expr/exten/DefineDatatype.kt:1-35", "hash": "7651e6510e290d61b22ab8c2e257f9ed", "title": "DefineDatatype: Kacket Language Define-Datatype Expression"}, "52": {"path": "/src/main/kotlin/com/github/std/kacket/expr/exten/DefineDatatype.kt:36-40", "hash": "795f68441ec2c1316a195aa0359b72c7", "title": "Parenthesized String Representation"}, "53": {"path": "/src/main/kotlin/com/github/std/kacket/expr/exten/ExtExpr.kt", "hash": "5dc1798ceb5eb5d14386caeec041fcb6", "title": "ExtExpr: Extended Expression Interface"}, "54": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Bool.kt", "hash": "5376942bdd12a5535a22c822d881ac2a", "title": "Kacket Bool Token Representation"}, "55": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Character.kt", "hash": "af030e5625b81958b79f50800d26d2d8", "title": "Character Tokenizer"}, "56": {"path": "/src/main/kotlin/com/github/std/kacket/parse/EOF.kt", "hash": "10f3e4201499823b0b580935f2244a72", "title": "EOF Token Class"}, "57": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Identifier.kt", "hash": "de76d75e34008d81ea90b6dd0bfa6786", "title": "Identifier Class Definition"}, "58": {"path": "/src/main/kotlin/com/github/std/kacket/parse/LexError.kt", "hash": "9a01757db88e1b3ecfb5079ca5e75364", "title": "Customizable Lexical Errors in Kacket Parsing"}, "59": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Lexer.kt", "hash": "5010c7357cdb4dc227b8e96152226a82", "title": "Kacket Lexer Class"}, "60": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Lexer.kt:1-42", "hash": "6dac148ce6b74fbbfd39095a39c5524e", "title": "Lexer Class for Parsing Text"}, "61": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Lexer.kt:43-83", "hash": "25d8ab1a886ee2f2780d5faaa5e8dbf8", "title": "Token Identifier Lexer"}, "62": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Lexer.kt:84-124", "hash": "2dd7a43f7ef5f68b0b102351992ad769", "title": "Kacket Lexer Parsing and Tokenization"}, "63": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Lexer.kt:125-159", "hash": "6c29516262a5aa99aa8eb283f2d7ce15", "title": "Lexer for Symbols and Numbers Parsing"}, "64": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Lexer.kt:160-190", "hash": "8fabc9f01e1c09cb5f9b8f1384babe93", "title": "Token Lexer Implementation"}, "65": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Lexer.kt:191-229", "hash": "bdcfa8a0d6942da118073f04c36742e1", "title": "Lexer Functions for Parsing Tokens"}, "66": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Lexer.kt:230-266", "hash": "b64e792d8da884bfd7a7bfaa1913d599", "title": "Lexer for Identifier Parsing"}, "67": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Num.kt", "hash": "877818da1877765ef57d5694259bc4ff", "title": "Num Token Representation"}, "68": {"path": "/src/main/kotlin/com/github/std/kacket/parse/ParseError.kt", "hash": "e9aa1d1ca4f06d6e32d0e9b94db1e56e", "title": "Custom Parse Error Exception Class"}, "69": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt", "hash": "bc9913f52651340e6e4d45714ef3a2d7", "title": "Kacket Parser Syntax & Functions"}, "70": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:1-32", "hash": "eddce041ab8d1c63cd08b7100c2d5eac", "title": "Parser Class Definition"}, "71": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:33-68", "hash": "73211fa0f1096b19458c73c330540004", "title": "Kacket Parser Function"}, "72": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:70-95", "hash": "d5a60df88486ad3d550399f41c25c1aa", "title": "Nested Quote Parsing in Kacket"}, "73": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:96-116", "hash": "63cb08e925eeb11b4b9aa288aec523a0", "title": "Kacket Parser: Identifying Syntax Elements"}, "74": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:117-147", "hash": "d916add26fab0fba2dba990c34d60c12", "title": "Kacket Parser Implementation"}, "75": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:148-178", "hash": "33e846a91eb4d1a89d8bafcd69e76d92", "title": "Letrec Parser in Kotlin"}, "76": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:179-213", "hash": "e94afcd3cf53209413b9bee1a9127473", "title": "Parsing Recursive Let Bindings in Kacket"}, "77": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:214-248", "hash": "fffec1d4dc4234ac31c6c2159774078f", "title": "Kacket Parser: Let Statement Functions"}, "78": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:249-279", "hash": "ca97eae69d15d536ac8928fed1e9117e", "title": "Parsing Let and Letrec Expressions"}, "79": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:280-317", "hash": "3c067b6a2b917214c2ce3f5f40378145", "title": "Parsing Let and Proc Statements"}, "80": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:319-344", "hash": "60ce5e78d13e44e062efb5fbe64f0269", "title": "Conditional Expression Parser"}, "81": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:345-374", "hash": "0b643aede77993a8ebc920def2d3230d", "title": "Parse If Expressions"}, "82": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:375-404", "hash": "44a9a123f92949deb15d6667b2773f88", "title": "Define Parser Function Implementation"}, "83": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Parser.kt:405-428", "hash": "026176bf3eec3fe156f9174960d5a8c5", "title": "Parser Handles Define Statement"}, "84": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Punctuation.kt", "hash": "1371c636cde44fc448d2d43e5b90e2e5", "title": "Punctuation Token Class"}, "85": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Symbol.kt", "hash": "f64c4715b861111b0af9a7b2c740eb9c", "title": "Symbol Class in Kacket Parser"}, "86": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Text.kt", "hash": "475432e640979faed29d159b2089dff4", "title": "Text Token Class: Kotlin Parse Implementation"}, "87": {"path": "/src/main/kotlin/com/github/std/kacket/parse/Token.kt", "hash": "f76b105907c1d6b05c1db4e60150efa6", "title": "Token Interface: Line & Column Numbering"}, "88": {"path": "/src/main/kotlin/com/github/std/kacket/parse/exten/CasesParser.kt", "hash": "d37161029e290a580f029537c193ba14", "title": "CasesParser: Parsing Cases Expressions"}, "89": {"path": "/src/main/kotlin/com/github/std/kacket/parse/exten/CasesParser.kt:1-27", "hash": "b25f4882969f2dc7733afe25e07f9a2c", "title": "CasesParser Extends SExprExtParser"}, "90": {"path": "/src/main/kotlin/com/github/std/kacket/parse/exten/CasesParser.kt:28-52", "hash": "a07c0f4de591382f9399ac3dfc8e8a63", "title": "CasesParser: Parsing Cases Statements in Kotlin"}, "91": {"path": "/src/main/kotlin/com/github/std/kacket/parse/exten/CasesParser.kt:53-54", "hash": "501ae7e37e7e88848ceb91886cae3a70", "title": "Switch Case Parsing"}, "92": {"path": "/src/main/kotlin/com/github/std/kacket/parse/exten/DefineDatatypeParser.kt", "hash": "eaa4bf37ea73bfbb5baac8619afe90d2", "title": "Kacket DefineDatatypeParser Explained"}, "93": {"path": "/src/main/kotlin/com/github/std/kacket/parse/exten/DefineDatatypeParser.kt:1-26", "hash": "25d58f2578359a3622f3eee826e214f4", "title": "Kacket's DefineDatatypeParser Functionality"}, "94": {"path": "/src/main/kotlin/com/github/std/kacket/parse/exten/DefineDatatypeParser.kt:27-55", "hash": "d6dfeaf6052a2413951b3d63a583ec15", "title": "Parse Define Datatype Block"}, "95": {"path": "/src/main/kotlin/com/github/std/kacket/parse/exten/DefineDatatypeParser.kt:56-59", "hash": "46f24863b09452985aaa7553ae058b1e", "title": "Define Datatype Parser"}, "96": {"path": "/src/main/kotlin/com/github/std/kacket/parse/exten/SExprExtParser.kt", "hash": "832ea3087253f9ceba0ced4e5c50bf3e", "title": "Extended Regular Expression Parser Interface"}, "97": {"path": "/src/main/kotlin/com/github/std/kacket/transpiler/scheme-js.js", "hash": "c5eff59f295ece4920b4716e7ec2f49f", "title": "Scheme to JavaScript Transpiler"}, "98": {"path": "/src/main/resources/grammar.txt", "hash": "ca2684752ef6201e4d688decfa4490c1", "title": "Programming Language Grammar EBNF Definition"}, "99": {"path": "/src/main/resources/test.rkt", "hash": "83f462df0e0974a7d2ac3a0d64aea40f", "title": "Racket Code Snippet: Functions, Trees, Sums"}, "100": {"path": "/src/test/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzerTest.kt", "hash": "ac099e9a1b3eeadb33d9c7d4df327fb3", "title": "Testing Kacket ProcCallAnalyzer"}, "101": {"path": "/src/test/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzerTest.kt:1-31", "hash": "03cd988526d2d18f84fbf8d0d29b7492", "title": "Kacket ProcCallAnalyzer Test"}, "102": {"path": "/src/test/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzerTest.kt:33-66", "hash": "2dc438a9e235746b973e555371a2c8af", "title": "Recursive Fibonacci and Sequence Length Analysis"}, "103": {"path": "/src/test/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzerTest.kt:67-105", "hash": "b325dba5353d3034a3fe54836e9b71ee", "title": "Lisp Code Test Suite with ProcCallAnalyzer"}, "104": {"path": "/src/test/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzerTest.kt:106-139", "hash": "d6eb7b2f4b65032b18bf9c7ca3a4200a", "title": "ProcCallAnalyzer Test: Scheme Program Analysis with Kotlin"}, "105": {"path": "/src/test/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzerTest.kt:140-176", "hash": "688c00afd87771575654a990eb187fdf", "title": "Analyzing ProcCallAnalyzer with Test Functions"}, "106": {"path": "/src/test/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzerTest.kt:177-208", "hash": "fe30e7558089df54c4a3b3235e9debc8", "title": "Parser for Expression Language"}, "107": {"path": "/src/test/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzerTest.kt:209-242", "hash": "fb642cd6966a63c6f654658892c37219", "title": "Lisp-like Program Analyzer Extension"}, "108": {"path": "/src/test/kotlin/com/github/std/kacket/analysis/ProcCallAnalyzerTest.kt:243-248", "hash": "18fd5c7f1d53f8469187cf3375ad8c0d", "title": "External Analyzers Addition in ProcCallAnalyzer"}, "109": {"path": "/src/test/kotlin/com/github/std/kacket/parse/LexerTest.kt", "hash": "d316d05a4ecdaedd61cc191cdc87acf8", "title": "Lexer Test: Fibonacci Parsing"}, "110": {"path": "/src/test/kotlin/com/github/std/kacket/parse/LexerTest.kt:1-41", "hash": "14ac3345048910a35feb732342d7e7e0", "title": "Testing Lexer with JUnit and ByteArrayInputStream"}, "111": {"path": "/src/test/kotlin/com/github/std/kacket/parse/LexerTest.kt:42-60", "hash": "d99fd6d0ff6129c6b36ad25dff8fd38d", "title": "Fibonacci Lexer for Scheme Code"}, "112": {"path": "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt", "hash": "0a15da1a960f630fd03d6d945bb41708", "title": "Kacket Parser Unit Test"}, "113": {"path": "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:1-28", "hash": "a17ee084d73fa574e3f0904c974e5195", "title": "Parser Test: Kotlin Expression Parsing"}, "114": {"path": "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:29-51", "hash": "658786bb4f56aa2eeceadefa4f03e2f1", "title": "Kacket Parser Testing: Code Block Comparison"}, "115": {"path": "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:52-80", "hash": "1303ea0ecb41524814aad389399dc254", "title": "Parser Scenarios Testing"}, "116": {"path": "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:81-115", "hash": "3aad54a392be3e0555bf7ddb56c0bcfd", "title": "Parser Test Suite"}, "117": {"path": "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:116-152", "hash": "6b1486e7bef88f37aaf582f1c79c2752", "title": "Parser Testing with Complex Expressions"}, "118": {"path": "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:153-184", "hash": "09431bddf35b511d23bbc568aabea30a", "title": "Kacket Parser Test Functions"}, "119": {"path": "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:185-220", "hash": "b7dfb4e5cb3959bd8590be97031fecfc", "title": "Lisp-like Expression Parser Test Cases"}, "120": {"path": "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:221-254", "hash": "e6b9e7212e7e999e09c22657a38a4008", "title": "Parser Test: Expression Parsing and Comparison"}, "121": {"path": "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:255-288", "hash": "c408a378ca658dc64ab50982969628f4", "title": "Unit Test for Expression Parser"}, "122": {"path": "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:289-308", "hash": "a83fb1446b3a78ad4a234bf787a13f82", "title": "Expression Parser Test Case"}, "123": {"path": "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:309-328", "hash": "8f88073e758b1cdf88dc7b7052b08488", "title": "Parser for Simple Programming Language"}, "124": {"path": "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:329-348", "hash": "a804ddc8966d8bcc5a597f4a3d7eccf2", "title": "Custom Cases Parser for Expression Parsing"}, "125": {"path": "/src/test/kotlin/com/github/std/kacket/parse/ParserTest.kt:349-350", "hash": "208163ae84de8e6c4fb651b58d3d77da", "title": "Closing Brace for Function"}}}
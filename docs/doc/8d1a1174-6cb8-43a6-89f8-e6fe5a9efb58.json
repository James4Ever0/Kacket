{
    "summary": "The Let class represents a let expression, which binds variables to values and evaluates the body expressions using those bindings. It has lists for variables, values, and body expressions, and keeps track of its line and column numbers. It implements lineNumber and columnNumber functions for retrieving these values, as well as a custom toString function to represent itself in string form.",
    "details": [
        {
            "comment": "The Let class represents a let expression, which binds variables to values and evaluates the body expressions using those bindings. It has lists for variables, values, and body expressions, and keeps track of its line and column numbers. It implements lineNumber and columnNumber functions for retrieving these values, as well as a custom toString function to represent itself in string form.",
            "location": "\"/media/root/Toshiba XG3/works/Kacket/docs/src/src/main/kotlin/com/github/std/kacket/expr/Let.kt\":0-27",
            "content": "package com.github.std.kacket.expr\nclass Let(\n    val variables: List<String>,\n    val values: List<Expression>,\n    val body: List<Expression>,\n    private val line: Int,\n    private val column: Int\n) : Expression {\n    override fun lineNumber(): Int = line\n    override fun columnNumber(): Int = column\n    override fun toString(): String {\n        val builder = StringBuilder(\"(let (\")\n        for ((variable, value) in variables zip values) {\n            builder.append('[')\n            builder.append(variable)\n            builder.append(' ')\n            builder.append(value)\n            builder.append(']')\n        }\n        builder.append(\") \")\n        for (expr in body) {\n            builder.append(expr.toString())\n        }\n        builder.append(')')\n        return builder.toString()\n    }\n}"
        }
    ]
}
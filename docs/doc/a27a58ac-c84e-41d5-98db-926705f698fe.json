{
    "summary": "This code defines a Letrec class that represents the LETREC expression in Kacket's syntax tree. It contains a list of variables, values, and body expressions along with line and column information. The class overrides the lineNumber() and columnNumber() functions to return the associated metadata. The toString() function formats the Letrec expression as per the Kacket syntax.",
    "details": [
        {
            "comment": "This code defines a Letrec class that represents the LETREC expression in Kacket's syntax tree. It contains a list of variables, values, and body expressions along with line and column information. The class overrides the lineNumber() and columnNumber() functions to return the associated metadata. The toString() function formats the Letrec expression as per the Kacket syntax.",
            "location": "\"/media/root/Toshiba XG3/works/Kacket/docs/src/src/main/kotlin/com/github/std/kacket/expr/Letrec.kt\":0-27",
            "content": "package com.github.std.kacket.expr\nclass Letrec(\n    val variables: List<String>,\n    val values: List<Expression>,\n    val body: List<Expression>,\n    private val line: Int,\n    private val column: Int\n) : Expression {\n    override fun lineNumber(): Int = line\n    override fun columnNumber(): Int = column\n    override fun toString(): String {\n        val builder = StringBuilder(\"(letrec (\")\n        for ((variable, value) in variables zip values) {\n            builder.append('[')\n            builder.append(variable)\n            builder.append(' ')\n            builder.append(value)\n            builder.append(']')\n        }\n        builder.append(\") \")\n        for (expr in body) {\n            builder.append(expr.toString())\n        }\n        builder.append(')')\n        return builder.toString()\n    }\n}"
        }
    ]
}
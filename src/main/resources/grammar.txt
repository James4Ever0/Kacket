Program := {Expr}+
Expr := SExpr | Const | VarExpr
SExpr := DefineExpr | IfExpr | ProcedureExpr | LetExpr  | CallExpr
DefineExpr := ( define ( Identifier {Identifier}* ) {Expr}+ )
            | ( define Identifier Expr )
IfExpr := ( if Expr Expr Expr )
ProcedureExpr := ( lambda ( {Identifier}* ) {Expr}+ )
LetExpr := ( let (  {(Identifier Expr)}+  ) {Expr}+ )
CallExpr := ( SExpr {Expr}* ) | ( VarExpr {Expr}* )
VarExpr := Identifier
Const := String | Number | Symbol | Bool | Character
